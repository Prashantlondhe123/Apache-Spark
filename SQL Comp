# Add two strings together:
SELECT CONCAT('W3Schools', '.com'); 

#Add strings together. Use '.' to separate the concatenated string values:
SELECT CONCAT_WS('.', 'www', 'W3Schools', 'com');

#Extract 3 characters from a string (starting from left):
SELECT LEFT('SQL Tutorial', 3) AS ExtractString;

#Return the length of a string:
SELECT LEN('W3Schools.com');

#Convert the text to lower-case:
SELECT LOWER('SQL Tutorial is FUN!');

#Convert the text to upper-case:
SELECT UPPER('SQL Tutorial is FUN!');

#Replace "T" with "M":
SELECT REPLACE('SQL Tutorial', 'T', 'M');

#Reverse a string:
SELECT REVERSE('SQL Tutorial');

#Extract 3 characters from a string (starting from right):
SELECT RIGHT('SQL Tutorial', 3) AS ExtractString;

#Remove leading and trailing spaces from a string:
SELECT TRIM('     SQL Tutorial!     ') AS TrimmedString;

#Return the absolute value of a number:
SELECT Abs(-243.5) AS AbsNum;

#Return the smallest integer value that is greater than or equal to a number:
SELECT CEILING(25.75) AS CeilValue; -> 26

#Return the largest integer value that is equal to or less than 25.75:
SELECT FLOOR(25.75) AS FloorValue; -> 25

#Round the number to 2 decimal places:
SELECT ROUND(235.415, 2) AS RoundValue; -> 235.420

#Return the square root of a number:
SELECT SQRT(64);->8

#Return the square of a number:
SELECT SQUARE(64);

#Return the current database system date and time:
SELECT GETDATE();

#Return the current date and time:
SELECT CURRENT_TIMESTAMP;

#Add one year to a date, then return the date:
SELECT DATEADD(year, 1, '2017/08/25') AS DateAdd; ->2018-08-25 00:00:00.000

#Return the difference between two date values, in years:
SELECT DATEDIFF(year, '2017/08/25', '2011/08/25') AS DateDiff; ->6

#Return a date from its parts:
SELECT DATEFROMPARTS(2018, 10, 31) AS DateFromParts;  ->2018-10-31

#Return the day of the month for a date:
SELECT DAY('2017/08/25') AS DayOfMonth;

#Return the month part of a date:
SELECT MONTH('2017/08/25') AS Month;

#Return the year part of a date:
SELECT YEAR('2017/08/25') AS Year;

#Convert a value to an int datatype:
SELECT CAST(25.65 AS int); -> 25.65

#Convert a value to a varchar datatype:
SELECT CAST(25.65 AS varchar);

#Convert a value to a datetime datatype:
SELECT CAST('2017-08-25' AS datetime);

#Return the first non-null value in a list:
SELECT COALESCE(NULL, NULL, NULL, 'W3Schools.com', NULL, 'Example.com');

#Case when :
select ord_no,
        case when ord_no=70009 then 'Hello'
            when  ord_no=70002 then 'Hey'
          else 'Hello there'  end as NewColumn
 from orders

#181. Employees Earning More Than Their Managers:
select e.name as employee  from 
employee e ,
employee m 
where e.managerid=m.id and e.salary > m.salary

#182. Duplicate Emails
 select email from person
 group by email
 having count(email)>1

#third highest salary : here limit 2 will skip first 2 salary and return 3rd salary 
select salary from employees
order by salary  desc 
limit 2, 1;

#write a query to calculate even and odd record
for even 
select * from table1
where mod(empid ,2)=0

for odd
select * from table1
where mod(empid,2)=1

# First record :
select * from table1 limit 1

# last record 
select * from table1 where empid= select max(empid) from table1

#Create newtable using existing table
create table table1 as select * from table2

#Create empty talble
create table table1 as select * from table2 where 3=4

#write query to retrive the list of employee working in same department 
select distinct e.empid
from emp e , emp e1
where e.dept=e1.dept
and e.empid!=e.empid

# substring fucntion 
select substring('hello',1,3)

# str_to_fucntions
select str_to_date('01/01/1995','%d/%m/%y')
output: 1995-01-01

# return 50% record
selec * from table where id<= (select count(id) from table)

# Add 10% salary increment
select id , salary+ (salary/10) as NewSalary from table1

#Duplicate in table 
select * from table1
group by c1,c2,c3
having count(*) =1

# 8th Highest salary :
select salary from (select salary,
    dense_rank() over (order by salary desc ) as dr
    from employees ) where dr=8

# Swap Gender  :
use case when 

#  fetch current date :
select current_date()

## fetch current TIme :
select current_time()

# select date from timestamp
select date (date& timestamp)

# select time :
select time(date& timestamp)

#select minute from datetime:
select minute(datetime)
select hour(datetime)
select second(datetime)

# Except & minus : return non matching record  from table1
select * from table1
except
select * from table2

# intersect : retrun common record :
select * from table1
intersect 
select * from table2

#
